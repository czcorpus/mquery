{
    "swagger": "2.0",
    "info": {
        "description": "Retrieves concordances, frequency information and collocations from language corpora",
        "title": "MQuery - query and analyze corpus data",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/collocations/{corpusId}": {
            "get": {
                "description": "Calculate a defined collocation profile of a searched expression. Values are sorted in descending order by their collocation score.",
                "produces": [
                    "application/json"
                ],
                "summary": "Collocations",
                "parameters": [
                    {
                        "type": "string",
                        "description": "An ID of a corpus to search in",
                        "name": "corpusId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The translated query",
                        "name": "q",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "An ID of a subcorpus",
                        "name": "subcorpus",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "absFreq",
                            "logLikelihood",
                            "logDice",
                            "minSensitivity",
                            "mutualInfo",
                            "mutualInfo3",
                            "mutualInfoLogF",
                            "relFreq",
                            "tScore"
                        ],
                        "type": "string",
                        "default": "logDice",
                        "description": "a collocation measure",
                        "name": "measure",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 5,
                        "description": "left range for candidates searching; values must be greater or equal to 1 (1 stands for words right before the searched term)",
                        "name": "srchLeft",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 5,
                        "description": "right range for candidates searching; values must be greater or equal to 1 (1 stands for words right after the searched term)",
                        "name": "srchRight",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 3,
                        "description": " the minimum frequency that a collocate must have in the searched range.",
                        "name": "minCollFreq",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "maximum number of result items",
                        "name": "maxItems",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Collocations"
                        }
                    }
                }
            }
        },
        "/concordance/{corpusId}": {
            "get": {
                "description": "Search in a corpus for concordances",
                "produces": [
                    "application/json"
                ],
                "summary": "Concordance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "An ID of a corpus to search in",
                        "name": "corpusId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The translated query",
                        "name": "q",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "An ID of a subcorpus",
                        "name": "subcorpus",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "json",
                            "markdown"
                        ],
                        "type": "string",
                        "default": "json",
                        "description": "For a concordance formatted in Markdown, `markdown` value can be passed",
                        "name": "format",
                        "in": "query"
                    },
                    {
                        "enum": [
                            0,
                            1
                        ],
                        "type": "integer",
                        "default": 0,
                        "description": "if 1, then markup specifying formatting and structure of text will be displayed along with tokens",
                        "name": "showMarkup",
                        "in": "query"
                    },
                    {
                        "enum": [
                            0,
                            1
                        ],
                        "type": "integer",
                        "default": 0,
                        "description": "if 1, then text metadata (e.g. author, publication year) will be attached to each line",
                        "name": "showTextProps",
                        "in": "query"
                    },
                    {
                        "maximum": 50,
                        "minimum": 0,
                        "type": "integer",
                        "default": 10,
                        "description": "Defines number of tokens around KWIC. For a value K, the left context is floor(K / 2) and for the right context, it is ceil(K / 2).",
                        "name": "contextWidth",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/corplist": {
            "get": {
                "description": "Shows a list of available corpora with their basic properties.",
                "produces": [
                    "application/json"
                ],
                "summary": "Corplist",
                "parameters": [
                    {
                        "type": "string",
                        "default": "en",
                        "description": "An ISO 639-1 locale code of response",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Corplist"
                        }
                    }
                }
            }
        },
        "/freqs/{corpusId}": {
            "get": {
                "description": "Calculate a frequency distribution for a searched term (KWIC).",
                "produces": [
                    "application/json"
                ],
                "summary": "FreqDistrib",
                "parameters": [
                    {
                        "type": "string",
                        "description": "An ID of a corpus to search in",
                        "name": "corpusId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The translated query",
                        "name": "q",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "An ID of a subcorpus",
                        "name": "subcorpus",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "lemma",
                        "description": "a positional attribute (e.g. `word`, `lemma`, `tag`) the frequency will be calculated on",
                        "name": "attr",
                        "in": "query"
                    },
                    {
                        "enum": [
                            0,
                            1
                        ],
                        "type": "integer",
                        "description": " ",
                        "name": "matchCase",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "maximum number of result items",
                        "name": "maxItems",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "default": 1,
                        "description": "minimum frequency of result items to be included in the result set",
                        "name": "flimit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Freq"
                        }
                    }
                }
            }
        },
        "/info/{corpusId}": {
            "get": {
                "description": "Shows a detailed corpus information, including size in tokens, available positional and structural attributes.",
                "produces": [
                    "application/json"
                ],
                "summary": "CorpusInfo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "An ID of a corpus to get info about",
                        "name": "corpusId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "en",
                        "description": "An ISO 639-1 locale code of response.",
                        "name": "locale",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CorpusInfo"
                        }
                    }
                }
            }
        },
        "/sentences/{corpusId}": {
            "get": {
                "description": "Search in a corpus for matching sentences. This is an alternative to the /concordance/{corpusId} endpoint.",
                "produces": [
                    "application/json"
                ],
                "summary": "Sentences",
                "parameters": [
                    {
                        "type": "string",
                        "description": "An ID of a corpus to search in",
                        "name": "corpusId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The translated query",
                        "name": "q",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "An ID of a subcorpus",
                        "name": "subcorpus",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "json",
                            "markdown"
                        ],
                        "type": "string",
                        "default": "json",
                        "description": "For a concordance formatted in Markdown, `markdown` value can be passed",
                        "name": "format",
                        "in": "query"
                    },
                    {
                        "enum": [
                            0,
                            1
                        ],
                        "type": "integer",
                        "default": 0,
                        "description": "if 1, then markup specifying formatting and structure of text will be displayed along with tokens",
                        "name": "showMarkup",
                        "in": "query"
                    },
                    {
                        "enum": [
                            0,
                            1
                        ],
                        "type": "integer",
                        "default": 0,
                        "description": "if 1, then text metadata (e.g. author, publication year) will be attached to each line",
                        "name": "showTextProps",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/term-frequency/{corpusId}": {
            "get": {
                "description": "This endpoint retrieves the frequency, instances per million (IPM), and Average Reduced Frequency (ARF) of a searched term within a corpus. It provides a concise aggregated frequency overview for a given query, regardless of the number of concrete words (n-grams) it covers.",
                "produces": [
                    "application/json"
                ],
                "summary": "TermFrequency",
                "parameters": [
                    {
                        "type": "string",
                        "description": "An ID of a corpus to search in",
                        "name": "corpusId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The translated query",
                        "name": "q",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "An ID of a subcorpus",
                        "name": "subcorpus",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ConcSize"
                        }
                    }
                }
            }
        },
        "/text-types-overview/{corpusId}": {
            "get": {
                "description": "Shows the text types (= values of predefined structural attributes) of a searched term. This endpoint provides a similar result to the endpoint `/text-types/{corpusId}` called multiple times on a fixed set of attributes (typically: publication years, authors, text types, media)",
                "produces": [
                    "application/json"
                ],
                "summary": "TTOverview",
                "parameters": [
                    {
                        "type": "string",
                        "description": "An ID of a corpus to search in",
                        "name": "corpusId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The translated query",
                        "name": "q",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "An ID of a subcorpus",
                        "name": "subcorpus",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "default": 1,
                        "description": "minimum frequency of result items to be included in the result set",
                        "name": "flimit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/TextTypesOverview"
                        }
                    }
                }
            }
        },
        "/text-types/{corpusId}": {
            "get": {
                "description": "Calculates frequencies of all the values of a requested structural attribute found in structures matching required query (e.g. all the authors found in \u0026lt;doc author=\\\"...\\\"\u0026gt;)",
                "produces": [
                    "application/json"
                ],
                "summary": "TextTypes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "An ID of a corpus to search in",
                        "name": "corpusId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The translated query",
                        "name": "q",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "An ID of a subcorpus",
                        "name": "subcorpus",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "a structural attribute the frequencies will be calculated for (e.g. `doc.pubyear`, `text.author`,...)",
                        "name": "attr",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Freq"
                        }
                    }
                }
            }
        },
        "/translate": {
            "get": {
                "description": "Translate a query to CQL.",
                "produces": [
                    "text/plain"
                ],
                "summary": "Translate",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the raw query",
                        "name": "q",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "ces",
                            "eng"
                        ],
                        "type": "string",
                        "description": "language in which the raw query is (eng or ces)",
                        "name": "lang",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Citation": {
            "type": "object",
            "properties": {
                "article_ref": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "default_ref": {
                    "type": "string"
                },
                "other_bibliography": {
                    "type": "string"
                }
            }
        },
        "Collocations": {
            "type": "object",
            "properties": {
                "colls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mango.GoCollItem"
                    }
                },
                "corpusSize": {
                    "type": "integer"
                },
                "error": {
                    "type": "string"
                },
                "measure": {
                    "type": "string"
                },
                "resultType": {
                    "$ref": "#/definitions/ResultType"
                },
                "srchRange": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "subcSize": {
                    "type": "integer"
                }
            }
        },
        "ConcSize": {
            "type": "object",
            "properties": {
                "arf": {
                    "type": "number"
                },
                "corpusSize": {
                    "type": "integer"
                },
                "error": {
                    "type": "string"
                },
                "ipm": {
                    "type": "number"
                },
                "resultType": {
                    "$ref": "#/definitions/ResultType"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "Concordance": {
            "type": "object",
            "properties": {
                "concSize": {
                    "type": "integer"
                },
                "error": {
                    "type": "string"
                },
                "lines": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/concordance.Line"
                    }
                },
                "resultType": {
                    "$ref": "#/definitions/ResultType"
                }
            }
        },
        "Corplist": {
            "type": "object",
            "properties": {
                "corpora": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CorpusCompactInfo"
                    }
                },
                "locale": {
                    "type": "string"
                }
            }
        },
        "Corpus": {
            "type": "object",
            "properties": {
                "attrList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Item"
                    }
                },
                "citationInfo": {
                    "$ref": "#/definitions/Citation"
                },
                "corpname": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "srchKeywords": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "structList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Item"
                    }
                },
                "textProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "webUrl": {
                    "type": "string"
                }
            }
        },
        "CorpusCompactInfo": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "flags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "fullName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "subcorpora": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SubcInfo"
                    }
                }
            }
        },
        "CorpusInfo": {
            "type": "object",
            "properties": {
                "corpus": {
                    "$ref": "#/definitions/results.CorpusInfo"
                },
                "locale": {
                    "type": "string"
                }
            }
        },
        "Freq": {
            "type": "object",
            "properties": {
                "concSize": {
                    "type": "integer"
                },
                "corpusSize": {
                    "type": "integer"
                },
                "error": {
                    "type": "string"
                },
                "examplesQueryTpl": {
                    "type": "string"
                },
                "fcrit": {
                    "type": "string"
                },
                "freqs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/results.FreqDistribItem"
                    }
                },
                "resultType": {
                    "$ref": "#/definitions/ResultType"
                },
                "subcSize": {
                    "type": "integer"
                }
            }
        },
        "Item": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                }
            }
        },
        "ResultType": {
            "type": "string",
            "enum": [
                "conc",
                "termFrequency",
                "coll",
                "collFreqData",
                "freqs",
                "multipleFreqs",
                "corpusInfo",
                "textTypeNorms",
                "error"
            ],
            "x-enum-varnames": [
                "ResultTypeConcordance",
                "ResultTypeConcSize",
                "ResultTypeCollocations",
                "ResultTypeCollFreqData",
                "ResultTypeFreqs",
                "ResultTypeMultipleFreqs",
                "ResultTypeCorpusInfo",
                "ResultTypeTextTypeNorms",
                "ResultTypeError"
            ]
        },
        "SubcInfo": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "TextTypesOverview": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "freqs": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/results.FreqDistrib"
                    }
                },
                "resultType": {
                    "$ref": "#/definitions/ResultType"
                }
            }
        },
        "concordance.Line": {
            "type": "object",
            "properties": {
                "errMsg": {
                    "description": "ErrMsg is an error message in case problems occured\nwith parsing related to the line. The policy here is\nto always return a line with value replaced by a placeholder\nin case of an error.",
                    "type": "string"
                },
                "props": {
                    "description": "Props contains information about the text this\nline comes from (typically information like author,\npublication year etc.)",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "ref": {
                    "description": "Ref contains numeric ID of the first token of the KWIC\nIt is typically used when referring back to the concordance",
                    "type": "string"
                },
                "text": {
                    "description": "Text contains positional text data (= tokens)",
                    "type": "array",
                    "items": {}
                }
            }
        },
        "mango.GoCollItem": {
            "type": "object",
            "properties": {
                "freq": {
                    "type": "integer"
                },
                "score": {
                    "type": "number"
                },
                "word": {
                    "type": "string"
                }
            }
        },
        "results.CorpusInfo": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/Corpus"
                },
                "error": {}
            }
        },
        "results.FreqDistrib": {
            "type": "object",
            "properties": {
                "concSize": {
                    "description": "ConcSize represents number of matching concordance rows",
                    "type": "integer"
                },
                "corpusSize": {
                    "description": "CorpusSize is always equal to the whole corpus size\n(even if we work with a subcorpus)",
                    "type": "integer"
                },
                "error": {},
                "examplesQueryTpl": {
                    "description": "ExamplesQueryTpl provides a (CQL) query template\nfor obtaining examples matching words from the `Freqs`\natribute (one by one).",
                    "type": "string"
                },
                "fcrit": {
                    "description": "Fcrit a Manatee-encoded freq. criterion used with\nthis result. This is mostly useful (as an info for\na client) in case a default criterion is applied.",
                    "type": "string"
                },
                "freqs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/results.FreqDistribItem"
                    }
                },
                "subcSize": {
                    "description": "SubcSize shows a subcorpus size in case a subcorpus\nis involved",
                    "type": "integer"
                }
            }
        },
        "results.FreqDistribItem": {
            "type": "object",
            "properties": {
                "base": {
                    "type": "integer"
                },
                "freq": {
                    "type": "integer"
                },
                "ipm": {
                    "type": "number"
                },
                "value": {
                    "type": "string"
                }
            }
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}